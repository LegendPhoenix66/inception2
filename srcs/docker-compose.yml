services:
  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    container_name: mariadb
    # Use the locally built image to avoid pulling the official 'mariadb' image by name
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - inception
    secrets:
      - db_root_password
      - db_password
    expose:
      - "3306"
    healthcheck:
      # Try socket ping first (works before network is fully ready), then password ping as fallback
      test: ["CMD-SHELL", "mysqladmin --protocol=socket ping --silent || mysqladmin --protocol=socket -uroot -p$$(cat /run/secrets/db_root_password) ping --silent || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 45s

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    # Use the locally built image to avoid pulling the official 'wordpress' image by name
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/db_password
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception
    secrets:
      - db_password
      - credentials
    depends_on:
      mariadb:
        condition: service_healthy
    expose:
      - "9000"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 10s

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    # Use the locally built image to avoid pulling the official 'nginx' image by name
    restart: unless-stopped
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    ports:
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception
    depends_on:
      wordpress:
        condition: service_healthy

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH}/mariadb
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH}/wordpress

networks:
  inception:
    driver: bridge

secrets:
  db_root_password:
    file: ../secrets/db_root_password.txt
  db_password:
    file: ../secrets/db_password.txt
  credentials:
    file: ../secrets/credentials.txt